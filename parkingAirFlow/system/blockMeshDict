/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
    (0 0 0)
    (50 0 0)
    (50 10 0)
    (0 10 0)
    (0 0 0.01)
    (50 0 0.01)
    (50 10 0.01)
    (0 10 0.01)
    (0 15 0)
    (50 15 0)
    (0 15 .01)
    (50 15 .01)
    (0 20 0)
    (50 20 0)
    (0 20 .01)
    (50 20 .01)
    (0 30 0)
    (50 30 0)
    (0 30 .01)
    (50 30 .01)
    (-5 15 0)
    (-5 20 0)
    (-5 15 .01)
    (-5 20 .01)
    (55 10 0)
    (55 15 0)
    (55 10 .01)
    (55 15 .01)
);

blocks          
(
    hex (0 1 2 3 4 5 6 7) (200 40 1) simpleGrading (1 1 1)
    hex (3 2 9 8 7 6 11 10) (200 20 1) simpleGrading (1 1 1)
    hex (8 9 13 12 10 11 15 14) (200 20 1) simpleGrading (1 1 1)
    hex (12 13 17 16 14 15 19 18) (200 40 1) simpleGrading (1 1 1)
    hex (20 8 12 21 22 10 14 23) (20 20 1) simpleGrading (1 1 1)
    hex (2 24 25 9 6 26 27 11) (20 20 1) simpleGrading (1 1 1)
);

boundary         
(
    walls
    {
        type    wall;
        faces
        (
            (0 4 7 3) // 1 left
            (2 6 5 1) // 1 right
            (1 5 4 0) // 1 bottom
            (3 7 10 8) // 2 left
            (13 15 11 9) // 3 right
            (12 14 18 16) // 4 left
            (17 19 15 13) // 4 right
            (16 18 19 17) // 4 top
            (21 23 14 12) // 5 top
            (8 10 22 20) // 5 bottom
            (9 11 27 25) // 6 top
            (24 26 6 2) // 6 bottom
        );
    }
    inlet
    {
        type    patch;
        faces
        (
            (20 22 23 21) // 5 left
        );
    }
    outlet
    {
        type    patch;
        faces
        (
            (25 27 26 24) // 6 right
        );
    }
    frontAndBack 
    {
        type    empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
            (3 8 9 2) // 2
            (7 6 11 10) // 2
            (8 12 13 9) // 3
            (10 11 15 14) // 3
            (12 16 17 13) // 4
            (14 15 19 18) // 4
            (20 21 12 8) // 5
            (22 10 14 23) // 5
            (2 9 25 24) // 6
            (6 26 27 11) // 6
        );
    }
);

// ************************************************************************* //
